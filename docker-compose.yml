version: "3.9"

services:
  postgres:
    image: postgres:13.2
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-minidetector}
      POSTGRES_USER: ${POSTGRES_USER:-detector}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      POSTGRES_HOST_AUTH_METHOD: ${POSTGRES_HOST_AUTH_METHOD:-trust}
    networks:
      - db
    ports:
      - "127.0.0.1:${POSTGRES_PORT}:5432"


  sniffer:
    build: ./minidetector
    command: python -m main
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-detector}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-}
      POSTGRES_HOST: ${POSTGRES_HOST:-localhost}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      POSTGRES_DB: ${POSTGRES_DB:-minidetector}
    volumes:
      - ./lib:/code/lib
    depends_on:
      - postgres
    network_mode: host
    privileged: true

  api:
    build: ./api
    command: python -m main
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-detector}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-}
      POSTGRES_HOST: ${POSTGRES_HOST:-postgres}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      POSTGRES_DB: ${POSTGRES_DB:-minidetector}
    volumes:
      - ./lib:/code/lib
    networks:
      - db
    ports:
      - "0.0.0.0:${API_PORT:-8000}:8000"
    depends_on:
      - postgres

networks:
  db:
    driver: bridge
